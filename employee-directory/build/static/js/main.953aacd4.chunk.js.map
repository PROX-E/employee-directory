{"version":3,"sources":["components/EmployeeContext.js","components/Search.js","components/Navbar.js","hooks/API.js","components/Button.js","components/Table.js","App.js","index.js"],"names":["EmployeeContext","createContext","Search","useState","search","setSearch","useContext","employees","setDisplayedEmployees","type","onChange","searchTerm","target","value","filterResult","filter","employee","name","first","toLowerCase","indexOf","Navbar","className","useGet","url","setEmployees","displayedEmployees","useEffect","a","axios","get","response","data","results","console","log","getEmployees","sortFunc","sort","b","dob","age","Button","children","Table","onClick","map","key","login","uuid","last","gender","email","App","Provider","ReactDOM","render","document","getElementById"],"mappings":"sVAEaA,EAAkBC,wBAAc,MCyB9BC,MAxBf,WAAiB,MAEeC,mBAAS,IAFxB,mBAENC,EAFM,KAEEC,EAFF,OAG8BC,qBAAWN,GAA/CO,EAHM,EAGNA,UAAWC,EAHL,EAGKA,sBAiBlB,OACG,2BAAOC,KAAK,OAAOC,SAhBtB,YAAgC,IAEtBC,EAFqB,EAARC,OAEOC,MAE1BR,EAAUM,GAEV,IAAMG,EAAeP,EAAUQ,QAAO,SAASC,GAI3C,OAAgF,IAAzEA,EAASC,KAAKC,MAAMC,cAAcC,QAAQT,EAAWQ,kBAEhEX,EAAsB,YAAIM,KAIiBD,MAAOT,K,MCV3CiB,MAXf,WACI,OACI,yBAAKC,UAAU,UACX,yBAAKA,UAAU,aAAf,sBACA,yBAAKA,UAAU,cACX,yBAAKA,UAAU,QAAf,qBACA,kBAAC,EAAD,S,yCCLT,SAASC,EAAOC,GAAK,IAAD,EACqDlB,qBAAWN,GAAjFO,EADiB,EACjBA,UAAWkB,EADM,EACNA,aAAcC,EADR,EACQA,mBAAoBlB,EAD5B,EAC4BA,sBAyDnD,OAnDAmB,qBAAU,WAAK,4CACX,4BAAAC,EAAA,+EAE+BC,IAAMC,IAAIN,GAFzC,OAEcO,EAFd,OAIQN,EAAaM,EAASC,KAAKC,SAE3BzB,EAAsBuB,EAASC,KAAKC,SAN5C,gDASQC,QAAQC,IAAI,uCAAZ,MATR,0DADW,uBAAC,WAAD,wBAaXC,KACF,IAqCK,CAACV,qBAAoBW,SAlC3B,SAAkBC,GACf,OAAOA,GACH,IAAK,OAaT/B,EAAU+B,MAAK,SAASV,EAAEW,GACxB,OAAGX,EAAEX,KAAKC,MAAQqB,EAAEtB,KAAKC,OACb,EAEA,KAIlBV,EAAsB,YAAID,IAnBd,MACJ,IAAK,MAuBTA,EAAU+B,MAAK,SAASV,EAAEW,GACtB,OAAQX,EAAEY,IAAIC,IAAMF,EAAEC,IAAIC,OAE9BjC,EAAsB,YAAID,IAxBlB,MACJ,QACI2B,QAAQC,IAAI,oC,YC1BbO,MARf,YAA4B,IAAXC,EAAU,EAAVA,SAEb,OACI,4BAAQrB,UAAU,UACbqB,ICsCEC,MAtCf,WAAkB,IAAD,EAECzC,mBAAS,yCACfkC,EAAad,EAHR,qBAGLc,SAEAX,EAAsBpB,qBAAWN,GAAjC0B,mBAGR,OACI,+BACI,+BACI,4BACI,wBAAImB,QAAS,kBAAMR,EAAS,UAAS,kBAAC,EAAD,oBACrC,yCACA,mCACA,sCACA,sCACA,wBAAIQ,QAAS,kBAAMR,EAAS,SAAQ,kBAAC,EAAD,eAG5C,+BACKX,EAAmBoB,KAAI,SAAA9B,GACpB,OACI,wBAAI+B,IAAK/B,EAASgC,MAAMC,MACpB,4BAAKjC,EAASC,KAAKC,OACnB,4BAAKF,EAASC,KAAKiC,MACnB,4BAAKlC,EAASgC,MAAMC,MACpB,4BAAKjC,EAASmC,QACd,4BAAKnC,EAASoC,OACd,4BAAKpC,EAASwB,IAAIC,YCZ/BY,MAjBf,WAAe,MAEqBlD,mBAAS,IAF9B,mBAENI,EAFM,KAEKkB,EAFL,OAGuCtB,mBAAS,IAHhD,mBAGNuB,EAHM,KAGclB,EAHd,KAKb,OACE,yBAAKc,UAAU,OAEb,kBAACtB,EAAgBsD,SAAjB,CAA0BzC,MAAO,CAACN,YAAWkB,eAAcC,qBAAoBlB,0BAC7E,kBAAC,EAAD,MACA,kBAAC,EAAD,SCZR+C,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.953aacd4.chunk.js","sourcesContent":["import {createContext} from 'react'\r\n\r\nexport const EmployeeContext = createContext(null);","import React, {useState, useContext} from 'react';\r\nimport { EmployeeContext } from './EmployeeContext.js';\r\n\r\nfunction Search(){\r\n    // stores the characters being entered into the search input\r\n    const [search, setSearch] = useState(\"\")\r\n    const {employees, setDisplayedEmployees} = useContext(EmployeeContext)\r\n    \r\n    function updateSearch({target}){\r\n        // just using for readability\r\n        const searchTerm = target.value\r\n        // used for updating the value in the search input, so it always equals exactly what is saved in state\r\n        setSearch(searchTerm)\r\n        // filters the employees based on the text that is entered in the search input\r\n        const filterResult = employees.filter(function(employee){\r\n            // Looks at every employee first name, makes the name lowercase, \r\n            // then if the first name contains the current search: display \r\n            // if not remove it from the list.\r\n            return employee.name.first.toLowerCase().indexOf(searchTerm.toLowerCase()) !== -1 ? true : false\r\n        })\r\n        setDisplayedEmployees([...filterResult])\r\n    }\r\n    // every letter entered triggers the onChange event.\r\n    return(\r\n       <input type=\"text\" onChange= {updateSearch} value={search}></input>\r\n    )\r\n}\r\nexport default Search;","import React from 'react';\r\nimport Search from \"./Search.js\"\r\nimport \"./Navbar.css\"\r\nfunction Navbar(){\r\n    return(\r\n        <div className=\"navbar\">\r\n            <div className=\"logo bold\">Employee Directory</div>\r\n            <div className=\"descriptor\">\r\n                <div className=\"bold\">Employee Search: </div>\r\n                <Search />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Navbar;","import {useEffect, useContext} from 'react';\r\nimport {EmployeeContext} from \"../components/EmployeeContext\"\r\nimport axios from \"axios\"\r\n\r\nexport function useGet(url){\r\n    const{employees, setEmployees, displayedEmployees, setDisplayedEmployees} = useContext(EmployeeContext)\r\n\r\n    \r\n    // get employees from the api, stores them in employees, and displayed employees. \r\n    // Only occurs once, and when component is mounted.\r\n    // eslint-disable-next-line\r\n    useEffect(()=> {\r\n        async function getEmployees(){\r\n            try {\r\n                const response = await axios.get(url)\r\n                // using employees to store a copy of all the employees that will not be manipulated\r\n                setEmployees(response.data.results)\r\n                // use displayed employees as the version of data that will be displayed.\r\n                setDisplayedEmployees(response.data.results)\r\n            }\r\n            catch (error) {\r\n                console.log(\"error retrieving info from the API: \", error)\r\n            }   \r\n        }\r\n        getEmployees()\r\n    },[])\r\n\r\n     // Sort function to trigger\r\n     function sortFunc(sort){\r\n        switch(sort){\r\n            case \"name\":\r\n                sortByName()\r\n                break\r\n            case \"age\":\r\n                sortByAge()\r\n                break\r\n            default:\r\n                console.log(\"sort does not match any cases\")\r\n        }\r\n    }\r\n    \r\n    // sorts employees by first name.\r\n    function sortByName(){\r\n        employees.sort(function(a,b){\r\n          if(a.name.first < b.name.first){\r\n              return -1;\r\n           }else{\r\n               return 1;\r\n        }\r\n     })\r\n    // Spread employees for react.\r\n    setDisplayedEmployees([...employees])\r\n    }\r\n    \r\n    // sorts employees by age.\r\n    function sortByAge(){\r\n        employees.sort(function(a,b){\r\n            return (a.dob.age - b.dob.age)\r\n        })\r\n        setDisplayedEmployees([...employees])\r\n    }\r\n\r\n    return {displayedEmployees, sortFunc}\r\n}","import React from 'react';\r\nimport \"./Button.css\"\r\n\r\nfunction Button({children}){\r\n   \r\n    return(\r\n        <button className=\"Button\">\r\n            {children}\r\n        </button>\r\n    )\r\n}\r\nexport default Button;","import React, { useState, useContext } from 'react';\r\nimport { useGet } from \"../hooks/API.js\"\r\nimport \"./Table.css\"\r\nimport Button from \"./Button.js\"\r\nimport { EmployeeContext } from './EmployeeContext.js';\r\n\r\n\r\nfunction Table() {\r\n    \r\n    const [url] = useState(\"https://randomuser.me/api/?results=15\")\r\n    const { sortFunc } = useGet(url);\r\n    // contains the employees to display in the table\r\n    const { displayedEmployees} = useContext(EmployeeContext)\r\n\r\n    \r\n    return (\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <td onClick={() => sortFunc(\"name\")}><Button>First Name</Button></td>\r\n                    <td>Last Name</td>\r\n                    <td>UID</td>\r\n                    <td>Gender</td>\r\n                    <td>E-mail</td>\r\n                    <td onClick={() => sortFunc(\"age\")}><Button>Age</Button></td>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {displayedEmployees.map(employee => {\r\n                    return (\r\n                        <tr key={employee.login.uuid}>\r\n                            <td>{employee.name.first}</td>\r\n                            <td>{employee.name.last}</td>\r\n                            <td>{employee.login.uuid}</td>\r\n                            <td>{employee.gender}</td>\r\n                            <td>{employee.email}</td>\r\n                            <td>{employee.dob.age}</td>\r\n                        </tr>\r\n                    )\r\n                }\r\n                )}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\nexport default Table;","import React, {useState} from 'react';\nimport './App.css';\n// component imports\nimport Navbar from \"./components/Navbar\"\nimport Table from \"./components/Table\"\nimport { EmployeeContext } from \"./components/EmployeeContext\"\n\nfunction App() {\n  // State function definitions\n  const [employees, setEmployees] = useState([]);\n  const [displayedEmployees, setDisplayedEmployees] = useState([])\n\n  return (\n    <div className=\"App\">\n      \n      <EmployeeContext.Provider value={{employees, setEmployees, displayedEmployees, setDisplayedEmployees}}>\n        <Navbar />\n        <Table />\n      </EmployeeContext.Provider>\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}